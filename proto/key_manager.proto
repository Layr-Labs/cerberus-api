syntax = "proto3";

package keymanager.v1;

option go_package = "github.com/layr-labs/cerberus-api/pkg/api/v1";

service KeyManager {
  rpc GenerateKeyPair(GenerateKeyPairRequest) returns (GenerateKeyPairResponse) {}
  rpc ImportKey(ImportKeyRequest) returns (ImportKeyResponse) {}
  rpc ListKeys(ListKeysRequest) returns (ListKeysResponse) {}
  rpc GetKeyMetadata(GetKeyMetadataRequest) returns (GetKeyMetadataResponse) {}
}

message GenerateKeyPairRequest {

  // Password to encrypt the private key
  // This will be only used if the keystore is local filesystem based
  string password = 1;
}

message GenerateKeyPairResponse {
  // G1 Public key hex of the generated keypair
  string public_key_g1 = 1;

  // Private key hex of the generated keypair
  string private_key = 2;

  // Mnemonic of the generated keypair
  string mnemonic = 3;

  // G2 Public key hex of the generated keypair
  string public_key_g2 = 4;
}

message ImportKeyRequest {
  // Plaintext hex private key of the keypair or BigInteger
  string private_key = 1;

  // Mnemonic of the keypair to import. One of private_key or mnemonic should be provided
  string mnemonic = 2;

  // Password to encrypt the private key
  string password = 3;
}

message ImportKeyResponse {
  // G1 Public key hex of the imported keypair
  string public_key_g1 = 1;
  // G2 Public key hex of the imported keypair
  string public_key_g2 = 2;
}

message PublicKey {
  // G1 Public key
  string public_key_g1 = 1;
  // G2 Public key
  string public_key_g2 = 2;
}

message ListKeysRequest {}

message ListKeysResponse {
  // List of public keys
  repeated PublicKey public_keys = 1;
}

message GetKeyMetadataRequest {
  // Public key to get
  string public_key_g1 = 1;
}

message GetKeyMetadataResponse {
  // Public key G1
  string public_key_g1 = 1;
  // Public key G2
  string public_key_g2 = 2;
  // Create at timestamp
  int64 created_at = 3;
  // Updated at timestamp
  int64 updated_at = 4;
}
